apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
  name: ngress
spec:
  controller: ngress.org/ingress-controller
---
apiVersion: v1
kind: Namespace
metadata:
  name: ngress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-observer
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - services
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-view
  namespace: ngress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-observer
subjects:
  - kind: ServiceAccount
    name: default
    namespace: ngress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: ngress
data:
  nginx.conf: |
    user  root;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    events {
      worker_connections  128000;
    }
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
    
      log_format  main  '$time_iso8601 $status $body_bytes_sent $remote_addr - $remote_user '
                        '"$http_host" "$request" "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;
      sendfile        on;
      keepalive_timeout  65;
    
      map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
      }
    
      include /etc/nginx/conf.d/*.conf;
    
      server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 444;
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ngress
  namespace: ngress

spec:
  selector:
    matchLabels:
      app: ngress-daemonset
  template:
    metadata:
      labels:
        app: ngress-daemonset
    spec:
      imagePullSecrets:
        - name: reg-cred
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
        - name: date-config
          hostPath:
            path: /etc/localtime #applyes the same time zone on nginx log as timezone on the host
        - name: config-volume
          configMap:
            name: config
        - name: conf-d
          emptyDir:
            medium: Memory
        - name: var-run
          emptyDir:
            medium: Memory
        - name: certs-volume
          emptyDir:
            medium: Memory
        - name: tmp-volume
          hostPath:
            path: /tmp
        - name: var-cache
          hostPath:
            path: /var/cache/nginx
        - name: static-site
          hostPath:
            path: /nginx-static

      shareProcessNamespace: true

      containers:
        - name: ngress
          image: allright/ngress:1.0.2
          resources:
            limits:
              cpu: 100m
          args: [ "-nginx-confd-dir", "/conf.d",
                  "-nginx-pid-file", "/pid/nginx.pid",
                  "-nginx-reload-debounce-interval", "10s",
                  "-nginx-certs-dir", "/certs"]
          env:
            - name: KUBERNETES_SERVICE_HOST
              value: "kubernetes.default.svc"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          volumeMounts:
            - name: conf-d
              mountPath: /conf.d
            - name: var-run
              mountPath: /pid
            - name: certs-volume
              mountPath: /certs

        - name: nginx
          image: nginx:1.26.2-alpine
          resources:
            limits:
              cpu: 2000m
          volumeMounts:
            - name: date-config
              mountPath: /etc/localtime
            - name: config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: conf-d
              mountPath: /etc/nginx/conf.d
            - name: var-run
              mountPath: /var/run
            - name: certs-volume
              mountPath: /certs
            - name: tmp-volume
              mountPath: /tmp
            - name: static-site
              mountPath: /nginx-static
            - name: var-cache
              mountPath: /var/cache/nginx
